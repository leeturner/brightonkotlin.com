<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coroutines on Brighton Kotlin</title>
    <link>/tags/coroutines/</link>
    <description>Recent content in coroutines on Brighton Kotlin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021 Brighton Kotlin</copyright>
    <lastBuildDate>Sun, 30 May 2021 18:09:08 +0000</lastBuildDate><atom:link href="/tags/coroutines/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Fresh Look at Kotlin Coroutines by Laksitha Ranasingha</title>
      <link>/blog/a-fresh-look-at-coroutines-laksitha-ranasingha/</link>
      <pubDate>Sun, 30 May 2021 18:09:08 +0000</pubDate>
      
      <guid>/blog/a-fresh-look-at-coroutines-laksitha-ranasingha/</guid>
      <description>The June Brighton Kotlin meetup takes place on Thursday 27th June at 6 pm GMT. We will be opening zoom just before 6pm for people to gather and chat. The link will be sent out on the day of the talk. The event will begin around 6pm.
We&amp;rsquo;ll be welcoming Laksitha Ranasingha who will take a fresh look at Coroutines:
Ok, Kotlin is cool and fun. It&amp;rsquo;s even better with built in coroutine support.</description>
    </item>
    
    <item>
      <title>Getting into the Flow with Coroutines By Joseph Van De Wee</title>
      <link>/blog/getting-into-the-flow-with-coroutines-joseph-van-de-wee/</link>
      <pubDate>Thu, 27 Feb 2020 22:09:08 +0000</pubDate>
      
      <guid>/blog/getting-into-the-flow-with-coroutines-joseph-van-de-wee/</guid>
      <description>Hot topics at KotlinConf, Coroutines and Flow provide an efficient way to handle asynchronous data streams.
In this talk Joe will explore how we can use some of the basics from these APIs to provide fluid experiences for our users and avoid callback hell in our code. Heâ€™ll point out some of the common pitfalls along and way and look at how we can migrate from RxJava to Flow for reactive programming in Kotlin.</description>
    </item>
    
  </channel>
</rss>
